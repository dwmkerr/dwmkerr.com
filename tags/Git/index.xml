<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git on dwmkerr.com</title><link>http://example.org/tags/Git/</link><description>Recent content in Git on dwmkerr.com</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><copyright>Dave Kerr</copyright><lastBuildDate>Wed, 10 Oct 2018 09:17:26 +0000</lastBuildDate><atom:link href="http://example.org/tags/Git/index.xml" rel="self" type="application/rss+xml"/><item><title>A portable and magic-free way to open Pull Requests from the Command Line</title><link>http://example.org/a-portable-and-magic-free-way-to-open-pull-requests-from-the-command-line/</link><pubDate>Wed, 10 Oct 2018 09:17:26 +0000</pubDate><guid>http://example.org/a-portable-and-magic-free-way-to-open-pull-requests-from-the-command-line/</guid><description>This little bash snippet will let you open a GitHub or GitLab pull request from the command line on most Unix-like systems (OSX, Ubuntu, etc), without using any magic libraries, ZSH tricks or other dependencies.
Here's how it looks in action OSX:
And Ubuntu:
The script is available as the gpr.sh gist. You can also find it in my dotfiles, in the git.sh file.
The Script Here's the script in its entirety:</description></item><item><title>Better Specifications</title><link>http://example.org/better-specifications/</link><pubDate>Mon, 05 May 2014 14:58:43 +0000</pubDate><guid>http://example.org/better-specifications/</guid><description>Specifications are absolutely key to the success of a project.
Unless you have a good definition of what your project is supposed to be, there's no way you can deliver it. A specification is the contract between you and the client, the basis for technical designs, quality assurance test plans, operational readiness, and much more.
I'm not going to talk about how different teams do specs, what works and what doesn't work.</description></item><item><title>Recursive read lock acquisitions not allowed in this mode</title><link>http://example.org/recursive-read-lock-acquisitions-not-allowed-in-this-mode/</link><pubDate>Wed, 10 Jul 2013 02:17:09 +0000</pubDate><guid>http://example.org/recursive-read-lock-acquisitions-not-allowed-in-this-mode/</guid><description>If you are using the following combination of tools:
Visual Studio 2012 Visual Studio Tools for Git Nuget Then you may encounter some weird problems when trying to update Nuget packages. For me, updates regularly fail with: Recursive read lock acquisitions not allowed in this mode.
I'm lost on the root cause of this, but it does seem that the project I'm working on has files set to read-only by something regularly, perhaps Visual Studio is trying to make Git more TFS-y by locking things all over the place.</description></item></channel></rss>