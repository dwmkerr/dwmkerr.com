<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Express.js on dwmkerr.com</title><link>http://example.org/tags/Express.js/</link><description>Recent content in Express.js on dwmkerr.com</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><copyright>Dave Kerr</copyright><lastBuildDate>Tue, 24 Mar 2015 14:45:02 +0000</lastBuildDate><atom:link href="http://example.org/tags/Express.js/index.xml" rel="self" type="application/rss+xml"/><item><title>Manipulating JSON Web Tokens (JWTs)</title><link>http://example.org/modifying-a-jwt-in-a-node-application/</link><pubDate>Tue, 24 Mar 2015 14:45:02 +0000</pubDate><guid>http://example.org/modifying-a-jwt-in-a-node-application/</guid><description>I've been writing a couple of web services lately that use Auth0 for identity management. It's a great platform that makes working with different identity providers a breeze.
One thing that I couldn't work out how to do at first was to quickly build a new JWT1 from an existing token. I wanted to take my current token, add some more data to it and return it to the user. So here's a &amp;lsquo;why&amp;rsquo; and &amp;lsquo;how&amp;rsquo;.</description></item><item><title>Node.js and Express - Strange Http Status Codes</title><link>http://example.org/node-js-and-express-strange-http-status-codes/</link><pubDate>Tue, 16 Jul 2013 16:23:43 +0000</pubDate><guid>http://example.org/node-js-and-express-strange-http-status-codes/</guid><description>In a Nutshell Sending a response in Express with a call like res.send(status, body) will send body as the status code if it is numeric - ignoring status. This is due to a fudge for backwards compatibility. The Details As part of a project I'm working on, I'm writing a service using node.jsand Express. This service exposes some entities in a MongoDB database through a REST API. Typically I hit this API through client-side Javascript, but in some places I want to hit the same API from some C# code - and I don't want to have to create classes for everything.</description></item></channel></rss>