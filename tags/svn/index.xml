<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SVN on dwmkerr.com</title><link>https://dwmkerr.com/tags/svn/</link><description>Recent content in SVN on dwmkerr.com</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><copyright>Copright &amp;copy; Dave Kerr</copyright><lastBuildDate>Thu, 21 Jun 2012 07:56:00 +0000</lastBuildDate><atom:link href="https://dwmkerr.com/tags/svn/index.xml" rel="self" type="application/rss+xml"/><item><title>Changing Merge/Compare Tools in TFS</title><link>https://dwmkerr.com/changing-mergecompare-tools-in-tfs/</link><pubDate>Thu, 21 Jun 2012 07:56:00 +0000</pubDate><guid>https://dwmkerr.com/changing-mergecompare-tools-in-tfs/</guid><description>&lt;p>Moving from SVN to TFS has been an interesting experience. The integration of source control directly into Visual Studio seems like a good thing, but even on a well set up network it can occasionally bring Visual Studio to its knees. And I still don't trust its automerge.&lt;/p>
&lt;p>Anyway, if you find that the TFS diff and merge tools are just too ugly and odd to work with, there's a great page on the MSDN blogs that describes how to set Visual Studio to use your preferred tool:&lt;/p>
&lt;p>&lt;a href="http://blogs.msdn.com/b/jmanning/archive/2006/02/20/diff-merge-configuration-in-team-foundation-common-command-and-argument-values.aspx">http://blogs.msdn.com/b/jmanning/archive/2006/02/20/diff-merge-configuration-in-team-foundation-common-command-and-argument-values.aspx&lt;/a>&lt;/p>
&lt;p>Welcome back TortoiseMerge, I've missed you.&lt;/p></description><category>CodeProject</category></item><item><title>Getting Source Code Metrics from SVN</title><link>https://dwmkerr.com/getting-source-code-metrics-from-svn/</link><pubDate>Mon, 14 Nov 2011 07:55:00 +0000</pubDate><guid>https://dwmkerr.com/getting-source-code-metrics-from-svn/</guid><description>&lt;p>Lets say that we need to find out how many lines of code exist in a branch, or how many lines are checked in by a specific user. Let's ignore the usefulness of these metrics, just assume that they're needed (realistically, lines of code isn't a very useful metric, but perhaps you want to have a quick idea of how much has gone into a release). How do we do this?&lt;/p>
&lt;p>TortoiseSVN statistics aren't really enough. Here's some alternatives:&lt;/p>
&lt;ul>
&lt;li>SVNPlot&lt;br />Theoretically should give us graphs. Runs in python. Couldn't get it to work in five minutes so moved on.&lt;br />&lt;a href="http://code.google.com/p/svnplot/">http://code.google.com/p/svnplot/&lt;/a>&lt;/li>
&lt;li>StatSVN&lt;br />Much more respected than the above, runs through Java. Again, didn't have results in five minutes to moved on.&lt;br />&lt;a href="http://www.statsvn.org/">http://www.statsvn.org/&lt;/a>&lt;/li>
&lt;li>FishEye&lt;br />Very powerful but it's not free. Generates a lot of information that you can use to analyse your repositories.&lt;br />&lt;a href="http://www.atlassian.com/software/fisheye/overview?gclid=CN6cw4WptqwCFQRP4QodnCtcGg">http://www.atlassian.com/software/fisheye/overview?gclid=CN6cw4WptqwCFQRP4QodnCtcGg&lt;/a>&amp;nbsp;&lt;/li>
&lt;/ul>
&lt;p>I'd recommend taking a look at FishEye if you're going to go to the effort of getting these statistics. Any comments on alternatives would be welcome!&lt;/p></description><category>CodeProject</category></item></channel></rss>