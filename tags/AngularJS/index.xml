<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AngularJS on dwmkerr.com</title><link>https://dwmkerr.github.io/dwmkerr.com/tags/AngularJS/</link><description>Recent content in AngularJS on dwmkerr.com</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><copyright>Dave Kerr</copyright><lastBuildDate>Mon, 25 Apr 2016 09:45:00 +0000</lastBuildDate><atom:link href="https://dwmkerr.github.io/dwmkerr.com/tags/AngularJS/index.xml" rel="self" type="application/rss+xml"/><item><title>Moving from React + Redux to Angular 2</title><link>https://dwmkerr.github.io/dwmkerr.com/moving-from-react-redux-to-angular-2/</link><pubDate>Mon, 25 Apr 2016 09:45:00 +0000</pubDate><guid>https://dwmkerr.github.io/dwmkerr.com/moving-from-react-redux-to-angular-2/</guid><description>I've just finished working on a very large project written in React and Redux. The whole team were new to both and we loved them.
I'm going to share my experiences of experimenting in Angular 2 with you, from the point of view of someone who needs a pretty compelling reason to move away from my JSX and reducers.
The Journey So Far Let me highlight a few key moments in my UI development experiences, to give a bit of context to my ramblings.</description></item><item><title>The Best Module System for AngularJS Applications</title><link>https://dwmkerr.github.io/dwmkerr.com/the-best-module-system-for-angularjs-applications/</link><pubDate>Wed, 18 Mar 2015 14:47:10 +0000</pubDate><guid>https://dwmkerr.github.io/dwmkerr.com/the-best-module-system-for-angularjs-applications/</guid><description>I was working on a small and simple application built with AngularJS the other day. As with most applications like this, I start with a single JavaScript file caled app.js and no module system.
In the past I've used RequireJS with AngularJS. It's an awful mistake. It leads to a big jump in complexity with no benefts. Angular apps don't work well with AMDs, so really your are using RequireJS to combine files into one big file.</description></item><item><title>Fixing Memory Leaks in AngularJS and other JavaScript Applications</title><link>https://dwmkerr.github.io/dwmkerr.com/fixing-memory-leaks-in-angularjs-applications/</link><pubDate>Tue, 03 Mar 2015 14:35:36 +0000</pubDate><guid>https://dwmkerr.github.io/dwmkerr.com/fixing-memory-leaks-in-angularjs-applications/</guid><description>Dealing with memory leaks in JavaScript applications can be a complex process. In this article I'm going to show you how to identify whether you have memory leaks, analyse them and ultimately resolve them.
I'm using an AngularJS application to demonstrate the concepts and approaches, but much of this material applies to any JavaScript application.
Understanding Memory Leaks What is a Memory Leak? Why is a Memory Leak Bad?</description></item><item><title>The Only AngularJS Modal Service You'll Ever Need</title><link>https://dwmkerr.github.io/dwmkerr.com/the-only-angularjs-modal-service-youll-ever-need/</link><pubDate>Mon, 16 Jun 2014 00:48:12 +0000</pubDate><guid>https://dwmkerr.github.io/dwmkerr.com/the-only-angularjs-modal-service-youll-ever-need/</guid><description>If you need modals in an AngularJS application, look no further. I'll show you how to use the Angular Modal Service to add Bootstrap Modals or your own custom modals to your application.
See it in a fiddle or check out a full set of samples online.
Contents [Using the Angular Modal Service](#UsingTheAngular ModalService) A Quick Example Design Goals How It Works Wrapping Up Using the Angular Modal Service Here's how you can use the Angular Modal Service to add a bootstrap modal to your application.</description></item><item><title>AngularJS Promises - The Definitive Guide</title><link>https://dwmkerr.github.io/dwmkerr.com/promises-in-angularjs-the-definitive-guide/</link><pubDate>Wed, 07 May 2014 12:06:55 +0000</pubDate><guid>https://dwmkerr.github.io/dwmkerr.com/promises-in-angularjs-the-definitive-guide/</guid><description>Promises are a core feature of AngularJS - whether you understand them or not, if you use AngularJS you've almost certainly been using them for a while.
In this post I'm going to explain what promises are, how they work, where they're used and finally how to use them effectively.
Once we've got the core understanding of promises, we'll look at some more advanced functionality - chaining and resolving promises when routing.</description></item><item><title>Practical AngularJS Part 2</title><link>https://dwmkerr.github.io/dwmkerr.com/practical-angularjs-part-2/</link><pubDate>Wed, 19 Feb 2014 15:29:29 +0000</pubDate><guid>https://dwmkerr.github.io/dwmkerr.com/practical-angularjs-part-2/</guid><description>I'm going to be working in F# almost exclusively for a short while, so before I throw myself into that I wanted to wind up my Practical AngularJS Part 2 article. It's ready to rock here:
Practical AngularJS Part 2 - Components of an AngularJS Application
In this article we get a brief introduction to what's in the toolkit for an angular developers - filters, controllers, services, directives, views and routes.</description></item><item><title>Langton's Ant in Javascript</title><link>https://dwmkerr.github.io/dwmkerr.com/langtons-ant-in-javascript/</link><pubDate>Sun, 15 Dec 2013 10:47:18 +0000</pubDate><guid>https://dwmkerr.github.io/dwmkerr.com/langtons-ant-in-javascript/</guid><description>Langton's Ant is a great simulation to write to play with a language. Just today I've completed my Langton's Ant write up and published it on the CodeProject, you can see the article at Learn JavaScript Part 3 - Angularjs and Langton's Ant.
There are some interesting things in the article for angular too - a look at using directives for custom elements, how to handle both the DOM and Angular loading correctly, and timers and intervals.</description></item><item><title>Introducing Practical AngularJS</title><link>https://dwmkerr.github.io/dwmkerr.com/introducing-practical-angularjs/</link><pubDate>Mon, 25 Nov 2013 16:16:09 +0000</pubDate><guid>https://dwmkerr.github.io/dwmkerr.com/introducing-practical-angularjs/</guid><description>I was recently at Devoxx in Antwerp, primarily because I wanted to get involved in some of the sessions that were being hosted by guys from the AngularJS team at Google. I've had a chance to work a little with Backbone and KnockoutJS and had been recently deliberately holding off looking at AngularJS so I could hit the conference and workshops fresh and unencumbered with any preconceptions.
The sessions were great, and since then I've been working on a couple of projects that use Angular.</description></item></channel></rss>