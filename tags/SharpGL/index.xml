<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SharpGL on dwmkerr.com</title><link>http://example.org/tags/SharpGL/</link><description>Recent content in SharpGL on dwmkerr.com</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><copyright>Dave Kerr</copyright><lastBuildDate>Sun, 30 Dec 2012 08:06:32 +0000</lastBuildDate><atom:link href="http://example.org/tags/SharpGL/index.xml" rel="self" type="application/rss+xml"/><item><title>SharpGL 2.1</title><link>http://example.org/sharpgl-2-1/</link><pubDate>Sun, 30 Dec 2012 08:06:32 +0000</pubDate><guid>http://example.org/sharpgl-2-1/</guid><description>For those who are interested, I'm now starting development of SharpGL 2.1. SharpGL 2.1 will primarily be a release to implement features and fix bugs that users have added to the Codeplex site. The actual features and bugs that'll be sorted are on the CodePlex site - just search for release &amp;lsquo;SharpGL 2.1&amp;rsquo;.
This will also be the first release of SharpGL that will be published on Nuget.</description></item><item><title>SharpGL 2.0</title><link>http://example.org/sharpgl-2-0/</link><pubDate>Wed, 22 Feb 2012 03:42:00 +0000</pubDate><guid>http://example.org/sharpgl-2-0/</guid><description>SharpGL 2.0 has been released - hit the codeplex site to get it:&amp;nbsp;http://sharpgl.codeplex.com/
Some new features:
Full support for all OpenGL functions up to OpenGL 4.2
Full support for all commonly used OpenGL extensions
Support for WinForms applications
Support for WPF applications (without resorting to WinForms hosts)
A powerful scene graph including polygons, shaders, NURBs and more
Many sample applications as starting points for your own projects.
Visual Studio Extension with SharpGL project templates for WPF and WinForms.</description></item><item><title>SharpGL 2.0 Beta 1 Released</title><link>http://example.org/sharpgl-2-0-beta-1-released/</link><pubDate>Mon, 10 Oct 2011 04:38:00 +0000</pubDate><guid>http://example.org/sharpgl-2-0-beta-1-released/</guid><description>It's been a long time coming, but the first Beta of SharpGL 2.0 is finally here!
The Beta is on CodePlex at:&amp;nbsp;http://sharpgl.codeplex.com/releases/view/74704
This includes the binaries, example applications and full source code.
Some of the more exciting features are:
Full hardware acceleration
OpenGL Extensions
Full core functionality up to OpenGL 4.2
Native WPF Control
Below is a screenshot of SharpGL in a WPF application:
&amp;nbsp;
&amp;nbsp;
&amp;nbsp;
And here's a link to a new CodeProject article describing how to use SharpGL in a WPF application:
&amp;nbsp;
http://www.</description></item><item><title>Importing OpenGL Extensions Functions with wglGetProcAddress</title><link>http://example.org/importing-opengl-extensions-functions-with-wglgetprocaddress/</link><pubDate>Sat, 24 Sep 2011 06:57:00 +0000</pubDate><guid>http://example.org/importing-opengl-extensions-functions-with-wglgetprocaddress/</guid><description>There are only a small set of the core OpenGL functions that can be imported via p/invoke - the majority of OpenGL functions are actually extension functions which are supported only on specific video cards. OpenGL offers a function called&amp;nbsp;wglGetProcAddress which can return the address of a named function - but how do we deal with this in the managed world?
Here's a brief description of how it's handled in SharpGL.</description></item><item><title>SharpGL 2.0: Hardware Acceleration</title><link>http://example.org/sharpgl-2-0-hardware-acceleration/</link><pubDate>Tue, 13 Sep 2011 07:33:00 +0000</pubDate><guid>http://example.org/sharpgl-2-0-hardware-acceleration/</guid><description>It took a bit of working out, but finally SharpGL can support hardware acceleration. Previously, all rendering in SharpGL was done to a DIB Section, the result of this would be blitted to the screen. Much playing around has shown that in fact this is problematic - rendering to DIB sections can never be hardware accelerated.
To hardware accelerate rendering, the rendering must be to a window or a pixel buffer.</description></item><item><title>Trials and Tribulations with SharpGL 2.0</title><link>http://example.org/trials-and-tribulations-with-sharpgl-2-0/</link><pubDate>Mon, 12 Sep 2011 06:03:00 +0000</pubDate><guid>http://example.org/trials-and-tribulations-with-sharpgl-2-0/</guid><description>SharpGL has not been updated for a while, the original CoreProject article is at: http://www.codeproject.com/KB/openGL/sharpgl.aspx
Recently I have begun work on SharpGL 2.0, with plans to address some of the issues people have had with SharpGL 1.83. In preparation there is a public accessible repository on CodePlex: http://sharpgl.codeplex.com/&amp;nbsp;check it soon, it will shortly be online.
Trying to squeeze acceptible performance from SharpGL has so far been an interesting task, I have found out many interesting things on the way, I'll be posting small snippets as I work on SharpGL 2.</description></item></channel></rss>