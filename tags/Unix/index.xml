<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Unix on dwmkerr.com</title><link>https://dwmkerr.github.io/dwmkerr.com/tags/Unix/</link><description>Recent content in Unix on dwmkerr.com</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><copyright>Dave Kerr</copyright><lastBuildDate>Thu, 25 May 2017 22:15:00 +0000</lastBuildDate><atom:link href="https://dwmkerr.github.io/dwmkerr.com/tags/Unix/index.xml" rel="self" type="application/rss+xml"/><item><title>A utility to help you wait for ports to open</title><link>https://dwmkerr.github.io/dwmkerr.com/a-utility-to-help-you-wait-for-ports-to-open/</link><pubDate>Thu, 25 May 2017 22:15:00 +0000</pubDate><guid>https://dwmkerr.github.io/dwmkerr.com/a-utility-to-help-you-wait-for-ports-to-open/</guid><description>There are occasions where you might need to have scripts or commands which wait for TCP/IP ports to open before you continue.
I've come across this need again and again when working with microservices, to make my life easier I've created a little utility called wait-port which will wait for a port to open:
It's built in Node, the project is open source, open for contributions and ready to use:</description></item><item><title>Simple Continuous Integration for Docker Images</title><link>https://dwmkerr.github.io/dwmkerr.com/simple-continuous-integration-for-docker-images/</link><pubDate>Thu, 03 Nov 2016 05:14:35 +0000</pubDate><guid>https://dwmkerr.github.io/dwmkerr.com/simple-continuous-integration-for-docker-images/</guid><description>In this article I'm going to demonstrate a few tips and tricks which can make your life easier when you are building or maintaining Dockerfiles.
The need for a Build Pipeline Do we really need any kind of continuous integration or build pipeline for Dockerfiles?
There will be cases when the answer is no. However, if the answer to any of the following questions is &amp;lsquo;yes&amp;rsquo;, it might be worth considering:</description></item><item><title>Testing the Docker for Mac Beta</title><link>https://dwmkerr.github.io/dwmkerr.com/testing-the-docker-for-mac-beta/</link><pubDate>Fri, 03 Jun 2016 10:45:24 +0000</pubDate><guid>https://dwmkerr.github.io/dwmkerr.com/testing-the-docker-for-mac-beta/</guid><description>I've finally had a chance to install the new Docker for Mac Beta and give it a whirl. In this article I'm going to talk a bit about how Docker works, the challenges of running Docker on a Mac or Windows and how the new Beta helps.
Below: The welcome message for the new Docker for Mac app
So What is Docker for Mac? If you don't know what Docker is, check out my article Learn Docker by Building a Microservice or the lovely What is Docker page from the docs.</description></item><item><title>Quick Tip: Sending Newlines with cURL</title><link>https://dwmkerr.github.io/dwmkerr.com/quick-tip-sending-newlines-with-curl/</link><pubDate>Tue, 03 May 2016 22:12:28 +0000</pubDate><guid>https://dwmkerr.github.io/dwmkerr.com/quick-tip-sending-newlines-with-curl/</guid><description>Yikes, this took far too long to figure out!
I have a service which takes plain text multi-line input and outputs an object for each line, something like this:
Input
Line 1 Line 2 Line 3 Output
[ {line: &amp;quot;Line 1&amp;quot;}, {line: &amp;quot;Line 2&amp;quot;}, {line: &amp;quot;Line 3&amp;quot;} ] There's a bit more to it than that, but that's the gist.
I want to test my service with cURL, trying:
curl --data &amp;quot;Line 1\nLine 2\nLine 3&amp;quot; \ -H &amp;quot;Content-Type: text/plain&amp;quot; localhost:3000/parse This did not work.</description></item><item><title>Learn Docker by building a Microservice</title><link>https://dwmkerr.github.io/dwmkerr.com/learn-docker-by-building-a-microservice/</link><pubDate>Tue, 19 Apr 2016 08:54:39 +0000</pubDate><guid>https://dwmkerr.github.io/dwmkerr.com/learn-docker-by-building-a-microservice/</guid><description>If you are looking to get your hands dirty and learn all about Docker, then look no further!
In this article I'm going to show you how Docker works, what all the fuss is about, and how Docker can help with a basic development task - building a microservice.
We'll use a simple Node.js service with a MySQL backend as an example, going from code running locally to containers running a microservice and database.</description></item></channel></rss>