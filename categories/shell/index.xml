<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Shell on dwmkerr.com</title><link>https://dwmkerr.com/categories/shell/</link><description>Recent content in Shell on dwmkerr.com</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><copyright>Copright &amp;copy; Dave Kerr</copyright><lastBuildDate>Tue, 21 Jan 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://dwmkerr.com/categories/shell/index.xml" rel="self" type="application/rss+xml"/><item><title>Effective Shell for Beginners</title><link>https://dwmkerr.com/effective-shell-for-beginners/</link><pubDate>Tue, 21 Jan 2020 00:00:00 +0000</pubDate><guid>https://dwmkerr.com/effective-shell-for-beginners/</guid><description>I have rebuilt my &amp;ldquo;Effective Shell&amp;rdquo; series as an online book - it's available now on:
https://effective-shell.com
The whole site is built from a GitHub repo at github.com/dwmkerr/effective-shell. It is open for contributions, changes, issues and suggestions. I've also added a comment section to each page to get input.
To keep the material as accessible as possible, I have added a new section for beginners, to help anyone who has not used a shell before.</description></item><item><title>Effective Shell Part 7: The Subtleties of Shell Commands</title><link>https://dwmkerr.com/effective-shell-7-shell-commands/</link><pubDate>Tue, 25 Jun 2019 07:25:23 +0000</pubDate><guid>https://dwmkerr.com/effective-shell-7-shell-commands/</guid><description>In this chapter, we'll take a look at the various different types of shell commands that exist and how this can affect your work.
By the end of this chapter, you might even be able to make sense of the horrifying and perfectly syntactically valid code below:
which $(where $(what $(whence $(whereis who)))) Part 1: Navigating the Command Line Part 2: Become a Clipboard Gymnast Part 3: Getting Help Part 4: Moving Around Part 5: Interlude - Understanding the Shell Part 6: Everything You Don't Need to Know About Job Control Part 7: The Subtleties of Shell Commands What Are Commands?</description></item><item><title>Effective Shell Part 6: Everything You Don't Need To Know About Job Control</title><link>https://dwmkerr.com/effective-shell-6-job-control/</link><pubDate>Mon, 10 Jun 2019 08:26:33 +0000</pubDate><guid>https://dwmkerr.com/effective-shell-6-job-control/</guid><description>Job control is a feature of most shells, which is generally not particularly intuitive to work with. However, knowing the basics can help prevent you from getting yourself into a tangle, and can from time to time make certain tasks a little easier.
In this chapter, we'll look at the main features of job control, why it can be a problematic, and some alternatives.
Part 1: Navigating the Command Line Part 2: Become a Clipboard Gymnast Part 3: Getting Help Part 4: Moving Around Part 5: Interlude - Understanding the Shell Part 6: Everything You Don't Need to Know About Job Control Part 7: The Subtleties of Shell Commands What Is Job Control?</description></item><item><title>Effective Shell Interlude: Understanding the Shell</title><link>https://dwmkerr.com/effective-shell-part-5-understanding-the-shell/</link><pubDate>Tue, 21 May 2019 09:22:05 +0000</pubDate><guid>https://dwmkerr.com/effective-shell-part-5-understanding-the-shell/</guid><description>This is the first &amp;lsquo;interlude&amp;rsquo; in my Effective Shell series. These interludes give some background, history or more flavour to some of the topics.
Part 1: Navigating the Command Line Part 2: Become a Clipboard Gymnast Part 3: Getting Help Part 4: Moving Around Part 5: Interlude - Understanding the Shell Part 6: Everything You Don't Need to Know About Job Control Part 7: The Subtleties of Shell Commands This one should be high-level enough for even non-technical readers to enjoy (or at least understand!</description></item><item><title>Effective Shell 4: Move Around!</title><link>https://dwmkerr.com/effective-shell-4-moving-around/</link><pubDate>Mon, 11 Mar 2019 09:02:00 +0000</pubDate><guid>https://dwmkerr.com/effective-shell-4-moving-around/</guid><description>This is the fourth part of my Effective Shell series, a set of practical examples of ways to be more efficient with everyday tasks in the shell or at the command line.
Part 1: Navigating the Command Line Part 2: Become a Clipboard Gymnast Part 3: Getting Help Part 4: Moving Around Part 5: Interlude - Understanding the Shell Part 6: Everything You Don't Need to Know About Job Control Part 7: The Subtleties of Shell Commands In this article we'll look at the key elements of navigation in the shell.</description></item><item><title>Effective Shell Part 3: Getting Help</title><link>https://dwmkerr.com/effective-shell-part-3-getting-hepl/</link><pubDate>Tue, 19 Dec 2017 09:05:18 +0000</pubDate><guid>https://dwmkerr.com/effective-shell-part-3-getting-hepl/</guid><description>This is the third part of my Effective Shell series - practical examples of ways to be more efficient with everyday tasks in a shell.
Part 1: Navigating the Command Line Part 2: Become a Clipboard Gymnast Part 3: Getting Help Part 4: Moving Around Part 5: Interlude - Understanding the Shell Part 6: Everything You Don't Need to Know About Job Control Part 7: The Subtleties of Shell Commands In this article I'll show you how to quickly get help when working with tools in the shell, without disrupting your flow!</description></item><item><title>Effective Shell Part 2: Become a Clipboard Gymnast</title><link>https://dwmkerr.com/effective-shell-part-2-become-a-clipboard-gymnast/</link><pubDate>Tue, 10 Oct 2017 09:57:54 +0000</pubDate><guid>https://dwmkerr.com/effective-shell-part-2-become-a-clipboard-gymnast/</guid><description>This is the second part of my Effective Shell series, which contains practical tips for using the shell to help with every day tasks and be more efficient:
Part 1: Navigating the Command Line Part 2: Become a Clipboard Gymnast Part 3: Getting Help Part 4: Moving Around Part 5: Interlude - Understanding the Shell Part 6: Everything You Don't Need to Know About Job Control Part 7: The Subtleties of Shell Commands In this article I'll show you how you can use the shell as an efficient tool to compliment how you use the clipboard.</description></item><item><title>Effective Shell Part 1: Navigating the Command Line</title><link>https://dwmkerr.com/effective-shell-part-1-navigating-the-command-line/</link><pubDate>Sun, 11 Jun 2017 23:05:40 +0000</pubDate><guid>https://dwmkerr.com/effective-shell-part-1-navigating-the-command-line/</guid><description>This is the first part of a series I am writing which contains practical tips for using the shell more effectively.
Part 1: Navigating the Command Line Part 2: Become a Clipboard Gymnast Part 3: Getting Help Part 4: Moving Around Part 5: Interlude - Understanding the Shell Part 6: Everything You Don't Need to Know About Job Control Part 7: The Subtleties of Shell Commands I can't think of a better place to start than navigating the command line.</description></item><item><title>A utility to help you wait for ports to open</title><link>https://dwmkerr.com/a-utility-to-help-you-wait-for-ports-to-open/</link><pubDate>Thu, 25 May 2017 22:15:00 +0000</pubDate><guid>https://dwmkerr.com/a-utility-to-help-you-wait-for-ports-to-open/</guid><description>There are occasions where you might need to have scripts or commands which wait for TCP/IP ports to open before you continue.
I've come across this need again and again when working with microservices, to make my life easier I've created a little utility called wait-port which will wait for a port to open:
It's built in Node, the project is open source, open for contributions and ready to use:</description></item><item><title>Tips and Tricks for Beautifully Simple Mobile App CI</title><link>https://dwmkerr.com/tips-and-tricks-for-beautifully-simple-mobile-app-ci/</link><pubDate>Mon, 03 Apr 2017 11:14:58 +0000</pubDate><guid>https://dwmkerr.com/tips-and-tricks-for-beautifully-simple-mobile-app-ci/</guid><description>In this article I'm going to demonstrate some simple tips and tricks which will help you build and maintain beautifully simple mobile build pipelines. These techniques can be applied to different mobile app technologies and integrated into almost any build system:
Each tip is demonstrated in the sample apps in the dwmkerr/beautifully-simple-app-ci repo.
The Challenges of Mobile App CI Tip 1 - Embrace Makefiles for Consistency Tip 2 - Control Version Numbers with a &amp;lsquo;Touch&amp;rsquo; Command Tip 3 - Control App Icons with a &amp;lsquo;Label&amp;rsquo; Command Tip 4 - Support Configurable App Ids Tip 5 - Document, Document, Document Conclusion The Challenges of Mobile App CI Conceptually, a mobile app CI pipeline is pretty simple:</description></item><item><title>Simple Continuous Integration for Docker Images</title><link>https://dwmkerr.com/simple-continuous-integration-for-docker-images/</link><pubDate>Thu, 03 Nov 2016 05:14:35 +0000</pubDate><guid>https://dwmkerr.com/simple-continuous-integration-for-docker-images/</guid><description>In this article I'm going to demonstrate a few tips and tricks which can make your life easier when you are building or maintaining Dockerfiles.
The need for a Build Pipeline Do we really need any kind of continuous integration or build pipeline for Dockerfiles?
There will be cases when the answer is no. However, if the answer to any of the following questions is &amp;lsquo;yes&amp;rsquo;, it might be worth considering:</description></item><item><title>Creating Info Tip Handlers with .NET</title><link>https://dwmkerr.com/creating-info-tip-handlers-with-net/</link><pubDate>Mon, 14 Jan 2013 03:47:44 +0000</pubDate><guid>https://dwmkerr.com/creating-info-tip-handlers-with-net/</guid><description>I have just added an article to the CodeProject that discusses how to create Info Tip shell extensions in .NET. These extensions are used by the shell to customise the tooltips shown over shell items.
The article shows how you can use SharpShell to very quickly create these extensions, you can find it at: http://www.codeproject.com/Articles/527058/NET-Shell-Extensions-Shell-Info-Tip-Handlers.
So just how easy does SharpShell make creating Shell Info Tip Handlers? The answer is pretty easy indeed.</description></item><item><title>SharpShell</title><link>https://dwmkerr.com/sharpshell/</link><pubDate>Tue, 08 Jan 2013 16:28:05 +0000</pubDate><guid>https://dwmkerr.com/sharpshell/</guid><description>SharpShell is a project that I have recently uploaded to CodePlex. This class library, and set of tools and samples, is designed to be a framework to enable rapid development of Shell Extensions using the .NET Framework. In time it may grow to contain some functionality for using Shell entities within managed applications (for example, allowing an Explorer context menu to be built dynamically for a given path).
Anyway, the code is all at sharpshell.</description></item></channel></rss>