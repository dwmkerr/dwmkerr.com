<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Visual Studio on dwmkerr.com</title><link>https://dwmkerr.com/categories/visual-studio/</link><description>Recent content in Visual Studio on dwmkerr.com</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><copyright>Copright &amp;copy; Dave Kerr</copyright><lastBuildDate>Sun, 30 Mar 2014 11:40:16 +0000</lastBuildDate><atom:link href="https://dwmkerr.com/categories/visual-studio/index.xml" rel="self" type="application/rss+xml"/><item><title>Managing Vsix Deployments with Powershell</title><link>https://dwmkerr.com/managing-vsix-deployments-with-powershell/</link><pubDate>Sun, 30 Mar 2014 11:40:16 +0000</pubDate><guid>https://dwmkerr.com/managing-vsix-deployments-with-powershell/</guid><description>tl;dr - vsix-tools fixes the &amp;lsquo;Invalid Multiple Files in VSIX&amp;rsquo; issue on the Visual Studio Gallery and lets you set vsix version numbers with Powershell.
I maintain a reasonably large project called SharpGL. This project contains two Vsix packages (Visual Studio Extensions), each of which contains project templates for Visual Studio.
If you have ever worked with Vsix files before you might have noticed that the tools for them in Visual Studio seem a little flaky - but even more so is that Visual Studio Gallery site that you have to use to upload your extensions.</description></item><item><title>Recursive read lock acquisitions not allowed in this mode</title><link>https://dwmkerr.com/recursive-read-lock-acquisitions-not-allowed-in-this-mode/</link><pubDate>Wed, 10 Jul 2013 02:17:09 +0000</pubDate><guid>https://dwmkerr.com/recursive-read-lock-acquisitions-not-allowed-in-this-mode/</guid><description>If you are using the following combination of tools:
Visual Studio 2012 Visual Studio Tools for Git Nuget Then you may encounter some weird problems when trying to update Nuget packages. For me, updates regularly fail with: Recursive read lock acquisitions not allowed in this mode.
I'm lost on the root cause of this, but it does seem that the project I'm working on has files set to read-only by something regularly, perhaps Visual Studio is trying to make Git more TFS-y by locking things all over the place.</description></item><item><title>Visual Studio Deployment Projects - an Update</title><link>https://dwmkerr.com/visual-studio-deployment-projects-an-update/</link><pubDate>Mon, 24 Jun 2013 12:18:18 +0000</pubDate><guid>https://dwmkerr.com/visual-studio-deployment-projects-an-update/</guid><description>I received the following message in my inbox the other day:
&amp;lsquo;[Uservoice declined - Bring back the basic setup and deployment project type Visual Studio Installer.&amp;rsquo;
Some readers may recall my post on the frustrating removal of the simple deployment project from Visual Studio. Unfortunately, with this message, they have closed the Uservoice request to bring back the basic setup projects (the request is at http://visualstudio.uservoice.com/forums/121579-visual-studio/suggestions/3041773-bring-back-the-basic-setup-and-deployment-project-).
It's rare for me to blog or comment on products like visual studio, to complain or evangelise about features and so on, but in this case as the previous post had received some interest I thought I'd write an update.</description></item><item><title>Web Deploy - Could not connect to the remote computer</title><link>https://dwmkerr.com/publish-web-web-deploy/</link><pubDate>Wed, 19 Jun 2013 09:22:06 +0000</pubDate><guid>https://dwmkerr.com/publish-web-web-deploy/</guid><description>Using Web Deploy is a nice and easy way to publish websites and web applications with Visual Studio. However, I found one thing that can be a bit of a blocker, that didn't seem to be explained anywhere very well.
Let's imagine I administer a webserver that hosts the site www.something.com. I've installed the Remote Management tools for IIS and the Web Deploy stuff, and have also configured the site to allow Web Deploy.</description></item><item><title>Switch Updated</title><link>https://dwmkerr.com/switch-updated/</link><pubDate>Sat, 16 Feb 2013 14:43:08 +0000</pubDate><guid>https://dwmkerr.com/switch-updated/</guid><description>There have been some problems with the version of Switch uploaded to the Visual Studio Gallery. I've created a new version of Switch (1.4) and uploaded this - it works fine now, for Visual Studio 2008, 2010 and 2012.
You can find out more about this extension on the Switch Page.</description></item><item><title>The Visual Studio Experimental Instance</title><link>https://dwmkerr.com/the-visual-studio-experimental-instance/</link><pubDate>Sat, 16 Feb 2013 14:41:27 +0000</pubDate><guid>https://dwmkerr.com/the-visual-studio-experimental-instance/</guid><description>Working on some addins lately has taught me a few really useful tricks about debugging in Visual Studio. I'll update this post over time.
The Experimental Instance
Very useful to know - the experimental instance loads its extensions from a special folder, and debugging extensions drops them there. The location is:
%UserProfile%\AppData\Local\Microsoft\VisualStudio\10.0Exp\Extensions\</description></item><item><title>Deployment Projects in Visual Studio 2012</title><link>https://dwmkerr.com/deployment-projects-in-visual-studio-2012/</link><pubDate>Sun, 02 Dec 2012 05:40:28 +0000</pubDate><guid>https://dwmkerr.com/deployment-projects-in-visual-studio-2012/</guid><description>[Note: They aren't bringing setup projects back, see http://www.dwmkerr.com/2013/06/visual-studio-deployment-projects-an-update/]
As part of Microsoft's ongoing campaign to reduce the usability of their tools for anyone who isn't working in exactly the way they want, Visual Studio 2012 no longer comes with the ability to create setup and deployment projects.
This is a pretty serious change. For anyone who is developing client applications, then an installer is pretty critical. Now the feature set in the VS deployment projects was fairly small - they were aimed towards making pretty basic, lean installers.</description></item><item><title>Go Offline Extension for Visual Studio 2010</title><link>https://dwmkerr.com/go-offline-extension-for-visual-studio-2010/</link><pubDate>Mon, 18 Jun 2012 10:54:00 +0000</pubDate><guid>https://dwmkerr.com/go-offline-extension-for-visual-studio-2010/</guid><description>Such a useful extension that I just had to big it up - the Go Offline extension adds the following menu item:
File&amp;gt;Source Control&amp;gt;Go Offline
http://visualstudiogallery.msdn.microsoft.com/425f09d8-d070-4ab1-84c1-68fa326190f4?SRC=Home
If you use TFS in a big environment, sometimes this can save a stack of time. Thanks to Bernhard Tschirren for taking the time to write this and share it!</description></item><item><title>Come on MS - Improve MFC</title><link>https://dwmkerr.com/come-on-ms-improve-mfc/</link><pubDate>Thu, 19 Apr 2012 09:02:00 +0000</pubDate><guid>https://dwmkerr.com/come-on-ms-improve-mfc/</guid><description>Loads of developers still use MFC. OK - if you're writing a new project, MFC would not be a great choice. But what if you're maintaining a 1.5 million line MFC app?&amp;nbsp;
MFC support in Visual Studio has barely improved since VC++ 6.0 - in fact its got worse. Their cursory attempt to show an effort by adding support for the Ribbon Control with the MFC feature pack was not enough.</description></item><item><title>Create Item Templates in Visual Studio</title><link>https://dwmkerr.com/create-item-templates-in-visual-studio/</link><pubDate>Fri, 13 Apr 2012 06:29:00 +0000</pubDate><guid>https://dwmkerr.com/create-item-templates-in-visual-studio/</guid><description>Part 3 of my series on extending Visual Studio is now available on the CodeProject:
http://www.codeproject.com/Articles/365680/Extending-Visual-Studio-Part-3-Item-Templates
In this article we look at how to create new Item Templates in Visual Studio.</description></item><item><title>Switch</title><link>https://dwmkerr.com/switch/</link><pubDate>Sat, 04 Feb 2012 03:53:00 +0000</pubDate><guid>https://dwmkerr.com/switch/</guid><description>I have written the second article in my series on Extending Visual Studio. In this article I describe how to create a Visual Studio Addin that allows you to switch between cpp/h files, WinForms code and designer, XAML and codebehind and so on. You can find the article on the CodeProject here:
http://www.codeproject.com/Articles/324611/Extending-Visual-Studio-Part-2-Creating-Addins&amp;nbsp;
There is also a direct download page on this blog, you can get Switch from dwmkerr.com by going here:</description></item><item><title>Extending Visual Studio Part 1 - Code Snippets</title><link>https://dwmkerr.com/extending-visual-studio-part-1-code-snippets/</link><pubDate>Wed, 30 Nov 2011 05:20:00 +0000</pubDate><guid>https://dwmkerr.com/extending-visual-studio-part-1-code-snippets/</guid><description>I have published the first of a series of articles on extending Visual Studio on the CodeProject. Part 1 deals with Code Snippets, the article link is below, enjoy!
http://www.codeproject.com/KB/dotnet/extendingvisualstudio1.aspx</description></item><item><title>How to Debug a Visual Studio Extension</title><link>https://dwmkerr.com/how-to-debug-a-visual-studio-extension/</link><pubDate>Mon, 28 Nov 2011 11:11:00 +0000</pubDate><guid>https://dwmkerr.com/how-to-debug-a-visual-studio-extension/</guid><description>Here are a few tips for debugging Visual Studio Extensions.
Visual Studio 2008/2010
If you need to debug your Visual Studio extension, you may find that Visual Studio itself locks it. This is a real drag - to resolve this issue, add the following as a pre-build step:
if exist "$(TargetPath).locked" del "$(TargetPath).locked" if not exist "$(TargetPath).locked" if exist "$(TargetPath)" move "$(TargetPath)" "$(TargetPath).locked" This will ensure the locked file is moved out of the way first - very useful!</description></item></channel></rss>